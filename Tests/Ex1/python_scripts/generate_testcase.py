import random
import argparse

def generate_single_testcase(file_path, forest_size, time_steps):
    """Generating a single test case file of the following format:
    <ForestSize>
    <TimeSteps>
    <CellElem>,<CellElem>,<CellElem>
    <CellElem>,<CellElem>,<CellElem>
    <CellElem>,<CellElem>,<CellElem>

    Example:
    4
    2
    F,T,G,F
    F,G,G,T
    G,T,G,T
    T,T,G,T
    
    Args:
        file_path (string): destenation path of the file to be generated
        forest_size (int): The size of the forest to be generated
        time_steps (int): How many time steps should be evaluated by the program.
    """    
    with open(file_path, 'w') as testcase_input_file:
        testcase_input_file.write(str(forest_size) + '\n')
        testcase_input_file.write(str(time_steps) + '\n')
        for row in xrange(forest_size):
            for col in xrange(forest_size -1):
                cell = random.choice(['G', 'F', 'T'])
                testcase_input_file.write(cell)
                testcase_input_file.write(',')
            # Last col doesnt have comma           
            cell = random.choice(['G', 'F', 'T'])
            testcase_input_file.write(cell)
            testcase_input_file.write('\n')


if __name__ == "__main__":
    """Generate T number of test case files, with rand size of forest and time-steps bounded by MaxSize.
    """
    parser = argparse.ArgumentParser(description='Generate Father testcases')
    parser.add_argument('dest_path',
                        help='destination folder')
    parser.add_argument('max_size',
                        help='max size of forest to be generated')
    parser.add_argument('num_of_testcases',
                        help='number of test cases to be generated by the script')
    args = parser.parse_args()
    print("Desenation folder: " + args.dest_path)
    print("Max size of forest: " + args.max_size)
    print("Number of test cases to generate: " + args.num_of_testcases)

    for idx in xrange(int(args.num_of_testcases)):
        forest_size = random.randint(1, int(args.max_size))
        time_steps = random.randint(1, int(args.max_size))
        generate_single_testcase( args.dest_path + "input_testcase_{}.txt".format(idx), forest_size, time_steps)
